library(dplyr)
library(RCurl)
library(dotenv)
source("credentials.R")
API_KEY <- "I9DhFzOgWkwhDhMkgmNqiOG35"
API_SECRET <- "Gyc7D22NN03mp277exmWUoVf6n7IUNTbRgZXHdpclOGVAuiVTP"
access_token <-	"68071383-ssY0YbVrGWfKkD6X8WcZC64QzbbjVWQkaAgPdIKkk"
access_token_secret <- "clLBn9zKLsPcvmO20njZHyZvksJaJ92BHZ3PH22EGeJTF"
library(streamR)
source("scripts/tags.R")
load("my_oauth.Rdata")
collect_tweets <- function() {
filterStream(file.name = "tweets.json",
track = c("Bernie Sanders", "Single Payer Healthcare", "FeelTheBern"),
language = "en",
timeout = 60,
oauth = my_oauth)
tweets.df <- parseTweets("tweets.json", simplify = FALSE)
return(tweets.df)
}
collect_tweets()
setwd("~/src/INFO_498F/final/INFO498_final_project/")
source("scripts/credentials.R")
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumerKey <- API_KEY
consumerSecret <- API_SECRET
my_oauth <- OAuthFactory$new(consumerKey = consumerKey,
consumerSecret = consumerSecret,
requestURL = requestURL,
accessURL = accessURL,
authURL = authURL)
my_oauth$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
save(my_oauth, file = "my_oauth.Rdata")
install.package('ROAuth')
install.packages('ROAuth')
library(ROAuth)
setwd("~/src/INFO_498F/final/INFO498_final_project/")
source("scripts/credentials.R")
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumerKey <- API_KEY
consumerSecret <- API_SECRET
my_oauth <- OAuthFactory$new(consumerKey = consumerKey,
consumerSecret = consumerSecret,
requestURL = requestURL,
accessURL = accessURL,
authURL = authURL)
my_oauth$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
save(my_oauth, file = "my_oauth.Rdata")
load("/Users/sarahstanton/Documents/UW classes/info498/INFO498_final_project/my_oauth.Rdata")
library(streamR)
source("scripts/tags.R")
load("my_oauth.Rdata")
collect_tweets <- function() {
filterStream(file.name = "tweets.json",
track = c("Bernie Sanders", "Single Payer Healthcare", "FeelTheBern"),
language = "en",
timeout = 60,
oauth = my_oauth)
tweets.df <- parseTweets("tweets.json", simplify = FALSE)
return(tweets.df)
}
collect_tweets()
install.packages('streamR')
library(streamR)
source("scripts/tags.R")
load("my_oauth.Rdata")
collect_tweets <- function() {
filterStream(file.name = "tweets.json",
track = c("Bernie Sanders", "Single Payer Healthcare", "FeelTheBern"),
language = "en",
timeout = 60,
oauth = my_oauth)
tweets.df <- parseTweets("tweets.json", simplify = FALSE)
return(tweets.df)
}
collect_tweets()
load("/Users/sarahstanton/Documents/UW classes/info498/INFO498_final_project/my_oauth.Rdata")
searchTwitter('apartment hunting', geocode='40.7361,-73.9901,5mi',  n=5000, retryOnRateLimit=1)
library(jsonlite)
source("scripts/tags.R")
source("scripts/tags.R")
load("my_oauth.Rdata")
library(streamR)
load("my_oauth.Rdata")
library(jsonlite)
data <- fromJSON(query)
query <- 'https://api.twitter.com/1.1/search/tweets.json?q=%23superbowl&result_type=recent'
data <- fromJSON(query)
query <- 'https://api.twitter.com/1.1/search/tweets.json?q=%fiveohfreakshow'
data <- fromJSON(query)
View(accessURL)
View(requestURL)
View(my_oauth)
View(oauthKey)
View(my_oauth$oauthKey)
query <- paste0('https://api.twitter.com/1.1/search/tweets.json$user_token=', my_oauth$oauthkey, 'q=%fiveohfreakshow')
query <- paste0('https://api.twitter.com/1.1/search/tweets.json$user_token=', my_oauth$oauthKey, 'q=%fiveohfreakshow')
data <- fromJSON(query)
install.packages('twitteR')
library(twitteR)
getTwitterOauth(my_oauth$consumerKey, my_oauth$consumerSecret)
getTwitterOAuth(my_oauth$consumerKey, my_oauth$consumerSecret)
setup_twitter_oauth(my_oauth$consumerKey, my_oauth$consumerSecret)
setup_twitter_oauth(my_oauth$consumerKey, my_oauth$consumerSecret)
setup_twitter_oauth(my_oauth$consumerKey, my_oauth$consumerSecret)
library(twitteR )
setup_twitter_oauth(my_oauth$consumerKey, my_oauth$consumerSecret)
source("scripts/credentials.R")
setwd("~/src/INFO_498F/final/INFO498_final_project/")
getwd()
setwd("~/Users/sarahstanton/Documents/UW classes/info498/")
setwd("~/Documents/UW classes/info498/INFO498_final_project")
install.packages(c("devtools", "rjson", "bit64", "httr"))
ibrary(devtools)
install_github("twitteR", username="geoffjentry")
library(twitteR)
library(devtools)
install_github("twitteR", username="geoffjentry")
library(twitteR)
source("scripts/credentials.R")
install.packages('dotenv')
library(devtools)
install_github("twitteR", username="geoffjentry")
library(twitteR)
source("scripts/credentials.R")
library(twitteR)
install_github("twitteR", username="SarahStanton")
install_github("twitteR", username="stants5")
library(devtools)
install_github("twitteR", username="geoffjentry")
library(twitteR)
install_github("geoffjentry/twitteR")
library(twitteR)
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumerKey <- API_KEY
consumerSecret <- API_SECRET
load("my_oauth.Rdata")
consumerKey <- my_oauth$consumerKey
consumerSecret <- my_oauth$consumerSecret
setup_twitter_oauth(consumerKey, consumerSecret)
detach("package:twitteR", unload=TRUE)
library(twitteR)
setup_twitter_oauth(consumerKey, consumerSecret)
?setup_twitter_oauth
setup_twitter_oauth(consumerKey, consumerSecret, oauthKey, oauthSecret)
oauthKey <- my_oauth$oauthKey
oauthSecret <- my_oauth$oauthSecret
setup_twitter_oauth(consumerKey, consumerSecret, oauthKey, oauthSecret)
setup_twitter_oauth(consumerKey, consumerSecret, oauthKey, oauthSecret)
searchTwitter('iphone')
searchTwitter('2016 election'+'realdonaldtrump', lang = en)
searchTwitter('2016 election', lang = en)
searchTwitter('2016 election', lang = eng)
searchTwitter('2016 election', n=25, lang = eng)
searchTwitter('2016 election', n=25, lang = en)
searchTwitter('2016election', n=25, lang = en)
searchTwitter('2016election', n=25, lang=en)
searchTwitter('2016election', lang='en')
searchTwitter('2016+election', lang='en')
searchTwitter('election 2016', lang='en')
searchTwitter('realdonaldtrump', lang='en')
a <- searchTwitter('realdonaldtrump', lang='en')
View(a)
a <- as.data.frame(searchTwitter('realdonaldtrump', lang='en'))
a <- searchTwitter('realdonaldtrump', lang='en', geocode='47.6097,-122.333')
a <- searchTwitter('election2016', lang='en', geocode='47.6097,-122.333')
a <- searchTwitter('election2016', lang='en', geocode='usa')
twitterMap <- function(searchtext,locations,radius){
require(ggplot2)
require(maps)
require(twitteR)
#radius from randomly chosen location
radius=radius
lat<-runif(n=locations,min=24.446667, max=49.384472)
long<-runif(n=locations,min=-124.733056, max=-66.949778)
#generate data fram with random longitude, latitude and chosen radius
coordinates<-as.data.frame(cbind(lat,long,radius))
coordinates$lat<-lat
coordinates$long<-long
#create a string of the lat, long, and radius for entry into searchTwitter()
for(i in 1:length(coordinates$lat)){
coordinates$search.twitter.entry[i]<-toString(c(coordinates$lat[i],
coordinates$long[i],radius))
}
# take out spaces in the string
coordinates$search.twitter.entry<-gsub(" ","", coordinates$search.twitter.entry ,
fixed=TRUE)
#Search twitter at each location, check how many tweets and put into dataframe
for(i in 1:length(coordinates$lat)){
coordinates$number.of.tweets[i]<-
length(searchTwitter(searchString=searchtext,n=1000,geocode=coordinates$search.twitter.entry[i]))
}
#making the US map
all_states <- map_data("state")
#plot all points on the map
p <- ggplot()
p <- p + geom_polygon( data=all_states, aes(x=long, y=lat, group = group),colour="grey",     fill=NA )
p<-p + geom_point( data=coordinates, aes(x=long, y=lat,color=number.of.tweets
)) + scale_size(name="# of tweets")
p
}
# Example
searchTwitter("dolphin",15,"10mi")
searchTwitter("election",15,"10mi")
twitterMap <- function(searchtext,locations,radius){
require(ggplot2)
require(maps)
require(twitteR)
#radius from randomly chosen location
radius=radius
lat<-runif(n=locations,min=24.446667, max=49.384472)
long<-runif(n=locations,min=-124.733056, max=-66.949778)
#generate data fram with random longitude, latitude and chosen radius
coordinates<-as.data.frame(cbind(lat,long,radius))
coordinates$lat<-lat
coordinates$long<-long
#create a string of the lat, long, and radius for entry into searchTwitter()
for(i in 1:length(coordinates$lat)){
coordinates$search.twitter.entry[i]<-toString(c(coordinates$lat[i],
coordinates$long[i],radius))
}
# take out spaces in the string
coordinates$search.twitter.entry<-gsub(" ","", coordinates$search.twitter.entry ,
fixed=TRUE)
#Search twitter at each location, check how many tweets and put into dataframe
for(i in 1:length(coordinates$lat)){
coordinates$number.of.tweets[i]<-
length(searchTwitter(searchString=searchtext,n=1000,geocode=coordinates$search.twitter.entry[i]))
}
#making the US map
all_states <- map_data("state")
#plot all points on the map
p <- ggplot()
p <- p + geom_polygon( data=all_states, aes(x=long, y=lat, group = group),colour="grey",     fill=NA )
p<-p + geom_point( data=coordinates, aes(x=long, y=lat,color=number.of.tweets
)) + scale_size(name="# of tweets")
p
}
# Example
searchTwitter("election",15,"10mi")
searchTwitter("election+2016",15,"10mi")
searchTwitter("election+2016")
twitterMap('election', 20, '10mi')
warnings()
twitterMap('election', 1000, '10mi')
twitterMap('election', 50, '10mi')
twitterMap('election', 20, '10mi')
